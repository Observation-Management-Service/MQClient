# For most recent version see:
# https://github.com/WIPACrepo/wipac-dev-tools/blob/main/.github/workflows/wipac-cicd.yml
# Copy any updates to wipac-dev-tools.

name: wipac ci/cd

on: [push]

jobs:

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: WIPACrepo/wipac-dev-flake8-action@v1

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      # - uses: WIPACrepo/wipac-dev-mypy-action@v1.1
      - run: |
          # there's a dependency clash with protobuf
          # google wants protobuf>=4.21.3
          # telemetry wants protobuf<4
          # so let's set a timer for six months from now:
          echo "How's https://github.com/WIPACrepo/MQClient/issues/51 coming along?"
          if [ $(echo "1664320371+(60*60*24*30*6) - $(date +%s)" | bc) -lt 0 ]; then
            exit 1
          fi

  py-setup:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - uses: WIPACrepo/wipac-dev-py-setup-action@v1.8
        with:
          base-keywords: WIPAC IceCube

  example:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        broker_client: [pulsar, rabbitmq, gcp, nats]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: example
        run: |
          # Pulsar
          if [ "${{ matrix.broker_client }}" = "pulsar" ]; then
            ./resources/docker-pulsar.sh
          # RabbitMQ
          elif [ "${{ matrix.broker_client }}" = "rabbitmq" ]; then
            ./resources/docker-rabbitmq.sh
          # GCP
          elif [ "${{ matrix.broker_client }}" = "gcp" ]; then
            export PUBSUB_EMULATOR_HOST=localhost:8085
            ./resources/local-gcp-emulator.sh
          # NATS
          elif [ "${{ matrix.broker_client }}" = "nats" ]; then
            ./resources/local-nats-js.sh
          fi

          echo "--------------------------------------------------------------"
          echo "running examples..."

          pip install --upgrade pip wheel setuptools
          pip install .[dev,${{ matrix.broker_client }}]
          python examples/worker.py --broker-client ${{ matrix.broker_client }} &
          python examples/server.py --broker-client ${{ matrix.broker_client }}

  py-versions:
    needs: [py-setup]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: versions
        uses: WIPACrepo/wipac-dev-py-versions-action@v2

  unit-test:
    needs: [py-versions]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.py3 }}
      - run: |
          pip install --upgrade pip wheel setuptools
          pip install .[dev,all]
          pytest -vvv tests/unit

  integration-test:
    needs: [py-versions]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
        broker_client: [pulsar, rabbitmq, gcp, nats]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.py3 }}
      - name: tests
        run: |
          echo "--------------------------------------------------------------"
          echo "starting broker..."

          # Pulsar
          if [ "${{ matrix.broker_client }}" = "pulsar" ]; then
            ./resources/docker-pulsar.sh
          # RabbitMQ
          elif [ "${{ matrix.broker_client }}" = "rabbitmq" ]; then
            ./resources/docker-rabbitmq.sh
          # GCP
          elif [ "${{ matrix.broker_client }}" = "gcp" ]; then
            export PUBSUB_EMULATOR_HOST=localhost:8085
            ./resources/local-gcp-emulator.sh
          # NATS
          elif [ "${{ matrix.broker_client }}" = "nats" ]; then
            ./resources/local-nats-js.sh
          fi

          echo "--------------------------------------------------------------"
          echo "waiting for broker..."
          sleep 15

          echo "--------------------------------------------------------------"
          echo "running tests..."

          pip install --upgrade pip wheel setuptools
          pip install .[dev,${{ matrix.broker_client }}]
          pytest -vvv tests/integrate/test_${{ matrix.broker_client }}.py

  release:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    needs: [py-setup, unit-test, integration-test]
    runs-on: ubuntu-latest
    concurrency: release
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_TOKEN }}